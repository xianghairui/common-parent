<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:redisson="http://redisson.org/schema/redisson"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd 
		http://redisson.org/schema/redisson http://redisson.org/schema/redisson/redisson.xsd">


	<!-- 最基本配置 单Redis节点模式的配置方法 -->
	<redisson:client>
		<!-- 默认地址 127.0.0.1:6379 -->
		<redisson:single-server />
	</redisson:client>
	<!-- 或者 -->
	<!-- <redisson:client> <redisson:single-server address="${redisAddress}"/> 
		<redisson:client> -->
	
	<!-- 通常情况下在一个应用程序里创建一个Redisson实例就已经能够满足正常的使用了，但是在个别的情况下，一个应用程序可能会遇到需要同时连接多个不同的Redis环境，这就需要多个Redisson实例同时并存。你可以通过定义多个<redisson:client/>元素标签来实现这个要求： -->
	<!--
	<redisson:client id="myRedisson1" name="redisson1,redisson2">
		<redisson:single-server address="127.0.0.1:6379"
			client-name="1" />
	</redisson:client>

	<redisson:client id="myRedisson2" name="redisson3,redisson4">
		<redisson:single-server address="127.0.0.1:6380"
			client-name="2" />
	</redisson:client>
	-->

</beans>
