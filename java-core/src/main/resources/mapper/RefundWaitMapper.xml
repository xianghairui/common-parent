<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xiang.demo.mapper.RefundWaitMapper">
  <resultMap id="BaseResultMap" type="com.xiang.demo.model.RefundWait">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="orderid" jdbcType="BIGINT" property="orderid" />
    <result column="time" jdbcType="TIMESTAMP" property="time" />
    <result column="ordertime" jdbcType="TIMESTAMP" property="ordertime" />
    <result column="orderdetailid" jdbcType="VARCHAR" property="orderdetailid" />
    <result column="refund" jdbcType="DOUBLE" property="refund" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="auditstatus" jdbcType="INTEGER" property="auditstatus" />
    <result column="auditreason" jdbcType="VARCHAR" property="auditreason" />
    <result column="auditor" jdbcType="VARCHAR" property="auditor" />
    <result column="audittime" jdbcType="TIMESTAMP" property="audittime" />
    <result column="details" jdbcType="VARCHAR" property="details" />
    <result column="getcnt" jdbcType="INTEGER" property="getcnt" />
    <result column="workerid" jdbcType="VARCHAR" property="workerid" />
    <result column="occupiedtime" jdbcType="TIMESTAMP" property="occupiedtime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, account, orderid, time, ordertime, orderdetailid, refund, phone, auditstatus, 
    auditreason, auditor, audittime, details, getcnt, workerid, occupiedtime
  </sql>
  <select id="selectByExample" parameterType="com.xiang.demo.model.RefundWaitExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from mdata_refund_wait
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from mdata_refund_wait
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from mdata_refund_wait
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.xiang.demo.model.RefundWaitExample">
    delete from mdata_refund_wait
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xiang.demo.model.RefundWait">
    insert into mdata_refund_wait (id, account, orderid, 
      time, ordertime, orderdetailid, 
      refund, phone, auditstatus, 
      auditreason, auditor, audittime, 
      details, getcnt, workerid, 
      occupiedtime)
    values (#{id,jdbcType=VARCHAR}, #{account,jdbcType=VARCHAR}, #{orderid,jdbcType=BIGINT}, 
      #{time,jdbcType=TIMESTAMP}, #{ordertime,jdbcType=TIMESTAMP}, #{orderdetailid,jdbcType=VARCHAR}, 
      #{refund,jdbcType=DOUBLE}, #{phone,jdbcType=VARCHAR}, #{auditstatus,jdbcType=INTEGER}, 
      #{auditreason,jdbcType=VARCHAR}, #{auditor,jdbcType=VARCHAR}, #{audittime,jdbcType=TIMESTAMP}, 
      #{details,jdbcType=VARCHAR}, #{getcnt,jdbcType=INTEGER}, #{workerid,jdbcType=VARCHAR}, 
      #{occupiedtime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.xiang.demo.model.RefundWait">
    insert into mdata_refund_wait
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="orderid != null">
        orderid,
      </if>
      <if test="time != null">
        time,
      </if>
      <if test="ordertime != null">
        ordertime,
      </if>
      <if test="orderdetailid != null">
        orderdetailid,
      </if>
      <if test="refund != null">
        refund,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="auditstatus != null">
        auditstatus,
      </if>
      <if test="auditreason != null">
        auditreason,
      </if>
      <if test="auditor != null">
        auditor,
      </if>
      <if test="audittime != null">
        audittime,
      </if>
      <if test="details != null">
        details,
      </if>
      <if test="getcnt != null">
        getcnt,
      </if>
      <if test="workerid != null">
        workerid,
      </if>
      <if test="occupiedtime != null">
        occupiedtime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="orderid != null">
        #{orderid,jdbcType=BIGINT},
      </if>
      <if test="time != null">
        #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="ordertime != null">
        #{ordertime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderdetailid != null">
        #{orderdetailid,jdbcType=VARCHAR},
      </if>
      <if test="refund != null">
        #{refund,jdbcType=DOUBLE},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="auditstatus != null">
        #{auditstatus,jdbcType=INTEGER},
      </if>
      <if test="auditreason != null">
        #{auditreason,jdbcType=VARCHAR},
      </if>
      <if test="auditor != null">
        #{auditor,jdbcType=VARCHAR},
      </if>
      <if test="audittime != null">
        #{audittime,jdbcType=TIMESTAMP},
      </if>
      <if test="details != null">
        #{details,jdbcType=VARCHAR},
      </if>
      <if test="getcnt != null">
        #{getcnt,jdbcType=INTEGER},
      </if>
      <if test="workerid != null">
        #{workerid,jdbcType=VARCHAR},
      </if>
      <if test="occupiedtime != null">
        #{occupiedtime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xiang.demo.model.RefundWaitExample" resultType="java.lang.Long">
    select count(*) from mdata_refund_wait
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update mdata_refund_wait
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.account != null">
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.orderid != null">
        orderid = #{record.orderid,jdbcType=BIGINT},
      </if>
      <if test="record.time != null">
        time = #{record.time,jdbcType=TIMESTAMP},
      </if>
      <if test="record.ordertime != null">
        ordertime = #{record.ordertime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.orderdetailid != null">
        orderdetailid = #{record.orderdetailid,jdbcType=VARCHAR},
      </if>
      <if test="record.refund != null">
        refund = #{record.refund,jdbcType=DOUBLE},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.auditstatus != null">
        auditstatus = #{record.auditstatus,jdbcType=INTEGER},
      </if>
      <if test="record.auditreason != null">
        auditreason = #{record.auditreason,jdbcType=VARCHAR},
      </if>
      <if test="record.auditor != null">
        auditor = #{record.auditor,jdbcType=VARCHAR},
      </if>
      <if test="record.audittime != null">
        audittime = #{record.audittime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.details != null">
        details = #{record.details,jdbcType=VARCHAR},
      </if>
      <if test="record.getcnt != null">
        getcnt = #{record.getcnt,jdbcType=INTEGER},
      </if>
      <if test="record.workerid != null">
        workerid = #{record.workerid,jdbcType=VARCHAR},
      </if>
      <if test="record.occupiedtime != null">
        occupiedtime = #{record.occupiedtime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update mdata_refund_wait
    set id = #{record.id,jdbcType=VARCHAR},
      account = #{record.account,jdbcType=VARCHAR},
      orderid = #{record.orderid,jdbcType=BIGINT},
      time = #{record.time,jdbcType=TIMESTAMP},
      ordertime = #{record.ordertime,jdbcType=TIMESTAMP},
      orderdetailid = #{record.orderdetailid,jdbcType=VARCHAR},
      refund = #{record.refund,jdbcType=DOUBLE},
      phone = #{record.phone,jdbcType=VARCHAR},
      auditstatus = #{record.auditstatus,jdbcType=INTEGER},
      auditreason = #{record.auditreason,jdbcType=VARCHAR},
      auditor = #{record.auditor,jdbcType=VARCHAR},
      audittime = #{record.audittime,jdbcType=TIMESTAMP},
      details = #{record.details,jdbcType=VARCHAR},
      getcnt = #{record.getcnt,jdbcType=INTEGER},
      workerid = #{record.workerid,jdbcType=VARCHAR},
      occupiedtime = #{record.occupiedtime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xiang.demo.model.RefundWait">
    update mdata_refund_wait
    <set>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="orderid != null">
        orderid = #{orderid,jdbcType=BIGINT},
      </if>
      <if test="time != null">
        time = #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="ordertime != null">
        ordertime = #{ordertime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderdetailid != null">
        orderdetailid = #{orderdetailid,jdbcType=VARCHAR},
      </if>
      <if test="refund != null">
        refund = #{refund,jdbcType=DOUBLE},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="auditstatus != null">
        auditstatus = #{auditstatus,jdbcType=INTEGER},
      </if>
      <if test="auditreason != null">
        auditreason = #{auditreason,jdbcType=VARCHAR},
      </if>
      <if test="auditor != null">
        auditor = #{auditor,jdbcType=VARCHAR},
      </if>
      <if test="audittime != null">
        audittime = #{audittime,jdbcType=TIMESTAMP},
      </if>
      <if test="details != null">
        details = #{details,jdbcType=VARCHAR},
      </if>
      <if test="getcnt != null">
        getcnt = #{getcnt,jdbcType=INTEGER},
      </if>
      <if test="workerid != null">
        workerid = #{workerid,jdbcType=VARCHAR},
      </if>
      <if test="occupiedtime != null">
        occupiedtime = #{occupiedtime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xiang.demo.model.RefundWait">
    update mdata_refund_wait
    set account = #{account,jdbcType=VARCHAR},
      orderid = #{orderid,jdbcType=BIGINT},
      time = #{time,jdbcType=TIMESTAMP},
      ordertime = #{ordertime,jdbcType=TIMESTAMP},
      orderdetailid = #{orderdetailid,jdbcType=VARCHAR},
      refund = #{refund,jdbcType=DOUBLE},
      phone = #{phone,jdbcType=VARCHAR},
      auditstatus = #{auditstatus,jdbcType=INTEGER},
      auditreason = #{auditreason,jdbcType=VARCHAR},
      auditor = #{auditor,jdbcType=VARCHAR},
      audittime = #{audittime,jdbcType=TIMESTAMP},
      details = #{details,jdbcType=VARCHAR},
      getcnt = #{getcnt,jdbcType=INTEGER},
      workerid = #{workerid,jdbcType=VARCHAR},
      occupiedtime = #{occupiedtime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>